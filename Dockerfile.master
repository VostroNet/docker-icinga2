
FROM debian:9-slim

ENV \
  TERM=xterm \
  DEBIAN_FRONTEND=noninteractive

ARG BUILD_DATE
ARG BUILD_VERSION
ARG ICINGA2_VERSION
ARG CERT_SERVICE_TYPE
ARG CERT_SERVICE_VERSION

ENV \
  TERM=xterm \
  DEBIAN_FRONTEND=noninteractive \
  TZ='Europe/Berlin'

EXPOSE 5665 8080

# ---------------------------------------------------------------------------------------

RUN \
  echo "export BUILD_DATE=${BUILD_DATE}"            > /etc/profile.d/icinga2.sh && \
  echo "export BUILD_VERSION=${BUILD_VERSION}"     >> /etc/profile.d/icinga2.sh && \
  echo "export ICINGA2_VERSION=${ICINGA2_VERSION}" >> /etc/profile.d/icinga2.sh && \
  echo "export ICINGA2_TYPE=Master"                >> /etc/profile.d/icinga2.sh && \
  chsh -s /bin/bash && \
  ln -sf /bin/bash /bin/sh && \
  apt-get update && \
  apt-get dist-upgrade && \
  apt-get install --assume-yes \
    ca-certificates \
    curl \
    gnupg && \
  DIST=$(awk -F"[)(]+" '/VERSION=/ {print $2}' /etc/os-release) && \
  curl \
    --silent \
    https://packages.icinga.com/icinga.key | apt-key add - && \
  echo "deb http://packages.icinga.com/debian icinga-${DIST} main" > \
    /etc/apt/sources.list.d/${DIST}-icinga.list && \
  apt-get update && \
  ln -s /etc/default /etc/sysconfig && \
  apt-get install --assume-yes --no-install-recommends \
    icinga2-bin \
    icinga2-ido-mysql \
    monitoring-plugins \
    mariadb-client \
    dnsutils \
    expect \
    file \
    fping \
    inotify-tools \
    jq \
    netcat-openbsd \
    psmisc \
    pwgen \
    python3.5-minimal \
    tzdata \
    unzip \
    xz-utils && \
  curl \
    --silent \
    --location \
    --retry 3 \
    --output /usr/bin/vercomp \
  https://gist.githubusercontent.com/bodsch/065b16ea3c3deb83af7f41990d2d273c/raw/6ba6d7b43de7cff78b7eaf3959f4546642b76750/vercomp && \
  chmod +x /usr/bin/vercomp && \
  apt-get --assume-yes --no-install-recommends install \
    libffi-dev g++ make git libssl-dev ruby-dev \
    bind9utils bsd-mailx mariadb-client \
    nagios-nrpe-server openssl ruby ssmtp \
    > /dev/null && \
  echo 'gem: --no-document' >> /etc/gemrc && \
  gem install --quiet --no-rdoc --no-ri \
    io-console bundler && \
  cd /tmp && \
  echo "install icinga-cert-service" && \
  if [ "${CERT_SERVICE_TYPE}" = "local" ] ; then \
    echo "use local sources" ; \
    mv /build/ruby-icinga-cert-service /tmp/ ; \
  else \
    git clone https://github.com/bodsch/ruby-icinga-cert-service.git ; \
    cd ruby-icinga-cert-service ; \
    if [ "${CERT_SERVICE_TYPE}" = "stable" ] ; then \
      echo "switch to stable Tag v${CERT_SERVICE_VERSION}" ; \
      git checkout tags/${CERT_SERVICE_VERSION} 2> /dev/null ; \
    elif [ "${CERT_SERVICE_TYPE}" = "development" ] ; then \
      echo "switch to development Branch" ; \
      git checkout development 2> /dev/null ; \
    fi \
  fi && \
  /tmp/ruby-icinga-cert-service/bin/installer.sh && \
  cd / && \
  apt-get remove --assume-yes --purge \
    libffi-dev gcc make git libssl-dev ruby-dev  > /dev/null && \
  mkdir -p /etc/icinga2/objects.d && \
  mkdir -p /run/icinga2/cmd && \
  mkdir -p /etc/icinga2/zones.d/global-templates && \
  mkdir -p /etc/icinga2/zones.d/director-global && \
  cp /etc/icinga2/zones.conf /etc/icinga2/zones.conf-distributed && \
  rm -f /etc/apt/sources.list.d/* && \
  apt-get clean --quiet --quiet > /dev/null && \
  echo "" && \
  which icinga2 && \
  icinga2 --version && \
  icinga2 daemon --validate && \
  icinga2 feature list && \
  echo "" && \
  apt-get clean && \
  apt autoremove --assume-yes && \
  rm -rf \
    /tmp/* \
    /var/cache/debconf/* \
    /usr/share/doc/* \
    /root/.gem \
    /root/.bundle

COPY rootfs/ /

WORKDIR "/etc/icinga2"
VOLUME [ "/etc/icinga2", "/var/lib/icinga2" ]

HEALTHCHECK \
  --interval=5s \
  --timeout=2s \
  --retries=12 \
  --start-period=10s \
  CMD ps ax | grep -v grep | grep -c $(cat /run/icinga2/icinga2.pid) || exit 1

CMD [ "/init/run.sh" ]

# ---------------------------------------------------------------------------------------

LABEL \
  version="${BUILD_VERSION}" \
  maintainer="Bodo Schulz <bodo@boone-schulz.de>" \
  org.label-schema.build-date=${BUILD_DATE} \
  org.label-schema.name="Icinga2 Docker Image" \
  org.label-schema.description="Inofficial Icinga2 Docker Image" \
  org.label-schema.url="https://www.icinga.org/" \
  org.label-schema.vcs-url="https://github.com/bodsch/docker-icinga2" \
  org.label-schema.vendor="Bodo Schulz" \
  org.label-schema.version=${ICINGA2_VERSION} \
  org.label-schema.schema-version="1.0" \
  com.microscaling.docker.dockerfile="/Dockerfile" \
  com.microscaling.license="GNU General Public License v3.0"

# ---------------------------------------------------------------------------------------
